@startuml
!theme reddress-darkblue

class Usuario {
  -String codigo
  -String login
  -String senha
  -Boolean ativo
  +TipoUsuario tipoUsuario
  +Usuario()
	+getters() : type
	+setters() : void
}

abstract class Pessoa {
	-String nome
	-String telefone
	-String email
	-String cpf
	-Endereco endereço
	-String observacao
	-LocalDate dataNascimento
	-LocalDate criadoEm
	-LocalDate alteradoEm
	+getters() : type
	+setters() : void
}

class Cliente {
	+Cliente()
	+getters() : type
	+setters() : void
}

class Funcionario {
	-String rg
	-String escolaridade
	-Integer numeroCarteiraTrabalho
	+Cargo cargo
	-EstadoCivil estadoCivil
	-Escolaridade escolaridade
	-LocalDate dataAdmissão
	-LocalDate dataDemissão
	-LocalDate criadoEm
	-LocalDate alteradoEm
	+Funcionario()
	+getters() : type
	+setters() : void
}

class Endereco {
  -String codigo
	-String pais
	-String estado
	-String cidade
	-String rua
	-Integer numero
	-String complemento
	-String cep
	-LocalDate criadoEm
	-LocalDate alteradoEm
	+Endereco()
	+getters() : type
	+setters() : void
}

class Mesa {
  -String codigo
	-Funcionario garcomResponsavel
	-Integer numero
	-OcupacaoMesa statusMesa 
	-Integer quantidadeMaxima
	-LocalDate criadoEm
	-LocalDate alteradoEm
	+Mesa()
	+setGarcomMesa(Funcionario)
	+alocar(): void
	+reservar(): void
	+liberar(): void
	+listarClientes(): void
	+getters() : type
	+setters() : void
}

class Comanda {
  -String codigo
	-Mesa mesaAtual
	-Cliente clienteComanda
	-List<ItemComanda> listaItemComanda
	-StatusPagaComanda statusComanda
	-String codigoComanda
	-Float valorTotal
	-LocalDate criadoEm
	-LocalDate alteradoEm
	+Comanda()
	+calcularTotal(List<ItemComanda>) : float
	+pagarComanda() bool
	+getters() : type
	+setters() : void
}

class Produto {
  -String codigo
	-String nome
	-String descricao
	-Float precoCusto
	-Float precoVenda
	-Time tempoPreparo
	-Boolean ativo
	-LocalDate criadoEm
	-LocalDate alteradoEm
	+Produto()
	+ativar()
	+desativar()
	+getters() : type
	+setters() : void
}

class ItemComanda {
	-Comanda comanda
	-Produto produto
	-Integer quantidade
	-StatusItemComanda statusPreparo
	-String observacao
	-LocalDate criadoEm
	-LocalDate alteradoEm
	+ItemComanda()
	+adicionarProduto(Produto, quantidade) bool
	+mudarStatusItem(StatusPreparo) bool
	+getters() : type
	+setters() : void
}

class Cardapio {
	-String nome
	-List<Produto> listaProdutos
	-String codigo
	-Boolean ativo
	+Cardapio()
	+getters() : type
	+setters() : void
}

enum OcupacaoMesa {
	LIVRE
	RESERVADA
	OCUPADA
}

enum StatusItemComanda {
	PRONTO
	PREPARANDO
	AGUARDANDO
}

enum StatusPagaComanda {
	ABERTA
	PAGA
	FECHADA
}

enum TipoUsuario {
	ADMINISTRADOR
	FUNCIONARIO
	CLIENTE
}

enum Cargo {
  	FAXINEIRO
	CAIXA
	GARCOM
	COZINHEIRO
	ENTREGADOR
	SUPERVISOR
}

enum EstadoCivil {
    SOLTEIRO
    CASADO
    DIVORCIADO
    VIUVO
    SEPARADO_JUDICIALMENTE
    UNIAO_ESTAVEL
}

enum Escolaridade {
  EDUCACAO_INFANTIL_INCOMPLETO
    EDUCACAO_INFANTIL_COMPLETO
    ENSINO_FUNDAMENTAL_INCOMPLETO
    ENSINO_FUNDAMENTAL_COMPLETO
    ENSINO_MEDIO_INCOMPLETO
    ENSINO_MEDIO_COMPLETO
    ENSINO_TECNICO_INCOMPLETO
    ENSINO_TECNICO_COMPLETO
    ENSINO_SUPERIOR_INCOMPLETO
    ENSINO_SUPERIOR_COMPLETO
    POS_GRADUACAO_INCOMPLETA
    POS_GRADUACAO_COMPLETA
    MESTRADO_INCOMPLETO
    MESTRADO_COMPLETO
    DOUTORADO_INCOMPLETO
    DOUTORADO_COMPLETO
} 

interface ICrud<T> {
  +create(obj : T) : T
  +read(id : String) : T
  +update(obj : T) : T
  +delete(id : String) : void
}

interface ICrudUsuario<extends ICrud<Usuario>> {
}

interface ICrudCliente<extends ICrud<Cliente>> {
}

interface ICrudFuncionario<extends ICrud<Funcionario>> {
}

interface ICrudEndereco<extends ICrud<Endereco>> {
}

interface ICrudMesa<extends ICrud<Mesa>> {
}

interface ICrudComanda<extends ICrud<Comanda>> {
}

interface ICrudProduto<extends ICrud<Produto>> {
}

interface ICrudItemComanda<extends ICrud<ItemComanda>> {
}

interface ICrudCardapio<extends ICrud<Cardapio>> {
}

ICrud <|.. ICrudUsuario
ICrud <|.. ICrudCliente
ICrud <|.. ICrudFuncionario
ICrud <|.. ICrudEndereco
ICrud <|.. ICrudMesa
ICrud <|.. ICrudComanda
ICrud <|.. ICrudProduto
ICrud <|.. ICrudItemComanda
ICrud <|.. ICrudCardapio

Usuario .. ICrudUsuario
Cliente .. ICrudCliente
Funcionario .. ICrudFuncionario
Endereco .. ICrudEndereco
Mesa .. ICrudMesa
Comanda .. ICrudComanda
Produto .. ICrudProduto
ItemComanda .. ICrudItemComanda
Cardapio .. ICrudCardapio

Usuario --> TipoUsuario
Pessoa --|> Usuario : extends
Pessoa *-- Endereco
Funcionario --|> Pessoa : extends
Funcionario --> Cargo
Funcionario --> EstadoCivil
Funcionario --> Escolaridade
Cliente --|> Pessoa
Mesa --> OcupacaoMesa
Comanda --> StatusPagaComanda
Mesa o-- Comanda
Mesa --o Funcionario
Cliente *-- Comanda
ItemComanda --> StatusItemComanda
ItemComanda --* Produto
ItemComanda --* Comanda
Cardapio --* Produto

@enduml
